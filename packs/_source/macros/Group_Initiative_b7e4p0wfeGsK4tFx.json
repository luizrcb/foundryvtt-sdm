{
  "folder": null,
  "name": "Group Initiative",
  "type": "script",
  "author": "ubbQuuuaFUXKToRg",
  "img": "icons/svg/dice-target.svg",
  "scope": "global",
  "command": "const tokens = canvas.tokens.controlled;\nconst group1 = []; // Players + Warrior NPCs + Pets\nconst group2 = []; // Non-combat NPCs\nconst excluded = []; // Helpers/Porters\n\n// Separate tokens into groups\nfor (const token of tokens) {\n  const actor = token.actor;\n  if (actor.type === \"character\") {\n    group1.push(token);\n  }\n  else if (actor.type === \"npc\") {\n    const isWarrior = actor.system?.type === 'warrior' || false;\n    const isHelper = actor.system?.type === 'helper' || false;\n    const isPorter = actor.system?.type === 'porter' || false;\n    const isPet = actor.system?.type === 'pet' || false;\n\n    if (isWarrior || isPet) {\n      group1.push(token);\n    }\n    else if (!isHelper && !isPorter && !isPet) {\n      group2.push(token);\n    }\n    else {\n      excluded.push(token);\n    }\n  }\n}\n\n// Notify about excluded tokens\nif (excluded.length > 0) {\n  const names = excluded.map(t => t.name).join(\", \");\n  ui.notifications.info(game.i18n.format('SDM.CombatantsExcluded', { names }));\n}\n\n// Process a token group\nasync function processGroup(group) {\n  if (group.length === 0) return;\n\n  // Select random roller\n  const roller = group[Math.floor(Math.random() * group.length)];\n\n  // Ensure roller is in combat\n  if (!roller.combatant) {\n    await roller.document.toggleCombatant();\n  }\n\n  // Roll initiative for roller\n  await game.combat.rollAll({ messageOptions: { rollMode: CONST.DICE_ROLL_MODES.PUBLIC } });\n\n\n  const initVal = roller.combatant.initiative;\n\n  // Apply initiative to group\n  for (const token of group) {\n    if (token === roller) continue;\n\n    if (!token.combatant) {\n      await token.document.toggleCombatant();\n    }\n\n    await token.combatant.update({ initiative: initVal });\n  }\n}\n\n// Process both groups\nawait processGroup(group1);\nawait processGroup(group2);",
  "flags": {},
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "exportSource": null,
    "coreVersion": "13.346",
    "systemId": "sdm",
    "systemVersion": "0.1.3",
    "createdTime": 1752715637637,
    "modifiedTime": 1752715637637,
    "lastModifiedBy": "ubbQuuuaFUXKToRg"
  },
  "ownership": {
    "default": 0,
    "ubbQuuuaFUXKToRg": 3
  },
  "_id": "b7e4p0wfeGsK4tFx",
  "sort": 0,
  "_key": "!macros!b7e4p0wfeGsK4tFx"
}
